name: Build and Release (dev)

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Extract Gradle version
        id: gradle_version
        run: |
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}' | tr -d "'\r\n ")
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build with Gradle
        run: ./gradlew build
      - name: Delete old tag if exists
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.gradle_version.outputs.version }}"; then
            git push --delete origin ${{ steps.gradle_version.outputs.version }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get timestamp
        id: timestamp
        run: echo "date=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
      - name: Create Release with fixed tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gradle_version.outputs.version }}
          release_name: Latest Dev Build (${{ github.ref_name }})
          draft: false
          prerelease: true
          body: |
            Latest development build
            - Build date: ${{ steps.timestamp.outputs.date }}
            - Commit: ${{ github.sha }}
            - Workflow: ${{ github.workflow }} #${{ github.run_id }}
      - name: Get JAR path
        id: jar_path
        run: |
          JAR_PATH=$(find build/libs -name '*.jar' | head -n 1)
          echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.jar_path.outputs.jar_path }}
          asset_name: Devore-${{ steps.gradle_version.outputs.version }}.jar
          asset_content_type: application/java-archive
